# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ACR_NAME: sgservianbench.azurecr.io
  IMAGE_NAME: msys2
  BASE_VER: ltsc2019
  TAG_SUF: x86_x64-windows-2019
  TAG_VER: 20220319

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: windows-2019
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Azure Container Registry Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.ACR_USER_ID }}
          password: ${{ secrets.ACR_USER_PWD }}
          login-server: https://${{ env.ACR_NAME}}

      # List existing docker images
      - name: List images
        run: docker images

      - name: Compile helper app
        run: cl msys2_shell.c
        working-directory: base

      - name: Build image
        run: |
          docker build . -t $ENV:ACR_NAME/${ENV:IMAGE_NAME}:${ENV:TAG_VER}-${ENV:TAG_SUF} `
            --build-arg BASE_VERSION=${ENV:BASE_VER} `
            --build-arg MSYS2_VERSION=${ENV:TAG_VER}
        working-directory: base

      - name: List again
        run: docker images

      - name: Push images to ACR
        run: docker push $ENV:ACR_NAME/${ENV:IMAGE_NAME}:${ENV:TAG_VER}-${ENV:TAG_SUF}